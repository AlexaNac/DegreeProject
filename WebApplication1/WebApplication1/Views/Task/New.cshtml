@model WebApplication1.Models.TaskViewModel

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New</h2>

@using (Html.BeginForm("Create", "Task", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Here you can add a new Task</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.task.task_name,"Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.task.task_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.task.task_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.detail,"Details", htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.task.detail,new { @class = "form-control FormArea",  @rows = "10" })
                @Html.ValidationMessageFor(model => model.task.detail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.startDate,"Start date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.task.startDate, new { htmlAttributes = new { @class = "form-control", type = "date", id = "HireDateAdd" } })
                @Html.ValidationMessageFor(model => model.task.startDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.endDate, "End date",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.task.endDate, new { htmlAttributes = new { @class = "form-control", type = "date", id = "BirthDateAdd" } })
                @Html.ValidationMessageFor(model => model.task.endDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.time,"Time to finish", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.task.time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.task.time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.importance_id, "Importance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.task.importance_id, new SelectList(Model.importanceList, "importance_id", "caption"), "Select importance", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.task.importance_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.status_id, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.task.status_id, new SelectList(Model.statusList, "status_id", "caption"), "Select status", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.task.status_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.task.project_id, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.task.project_id, new SelectList(Model.projects, "project_id", "project_name"), "Select manager", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.task.project_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.task.employee_id, "Assigned to", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.task.employee_id, new SelectList(Model.employees, "employee_id", "last_name"), "Select user", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.task.employee_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
   @Html.ActionLink("Back to List", "Index", new { sortedBy = 0 })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
